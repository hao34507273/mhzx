/*     */ package xtable;
/*     */ 
/*     */ import xdb.TTable;
/*     */ 
/*     */ public final class Locks {
/*   6 */   public static final TTable<?, ?> ACCOUNTNUMLOCK = _Tables_.getInstance().accountnum;
/*   7 */   public static final TTable<?, ?> ACTIVITY_COMPENSATE_GLOBAL_LOCK = _Tables_.getInstance().activitycompensate_global;
/*   8 */   public static final TTable<?, ?> ACTIVITYLOCK = _Tables_.getInstance().activity;
/*   9 */   public static final TTable<?, ?> ACTIVITYPOINTEXCHANGELOCK = _Tables_.getInstance().activity2activitypointexchangeglobalinfo;
/*  10 */   public static final TTable<?, ?> ADVERTLOCK = _Tables_.getInstance().advert;
/*  11 */   public static final TTable<?, ?> ALLLOTTOLOCK = _Tables_.getInstance().all_lotto_infos;
/*  12 */   public static final TTable<?, ?> ALLPARAWORLDS = _Tables_.getInstance().allparaworlds;
/*  13 */   public static final TTable<?, ?> ANIMALLOCK = _Tables_.getInstance().animal;
/*  14 */   public static final TTable<?, ?> ARENACHARTLOCK = _Tables_.getInstance().arenachart;
/*  15 */   public static final TTable<?, ?> ARENALOCK = _Tables_.getInstance().arena;
/*  16 */   public static final TTable<?, ?> AUCTIONLOCK = _Tables_.getInstance().auctionactivityinfo;
/*  17 */   public static final TTable<?, ?> AWARDGIFTLOCK = _Tables_.getInstance().awardgift;
/*  18 */   public static final TTable<?, ?> AWARDLOCK = _Tables_.getInstance().award2countinfo;
/*  19 */   public static final TTable<?, ?> BANGRAPHLOCK = _Tables_.getInstance().bangraph;
/*  20 */   public static final TTable<?, ?> BANNPCSERVICELOCK = _Tables_.getInstance().bannpcservice;
/*  21 */   public static final TTable<?, ?> BIGBOSSLOCK = _Tables_.getInstance().bigbossactivity;
/*  22 */   public static final TTable<?, ?> BOXAWARDLOCK = _Tables_.getInstance().boxaward;
/*  23 */   public static final TTable<?, ?> BREAKEGGLOCK = _Tables_.getInstance().breakegg_info;
/*  24 */   public static final TTable<?, ?> BUYYUANBAOORDER = _Tables_.getInstance().buyyuanbaoorder;
/*  25 */   public static final TTable<?, ?> CAKELOCK = _Tables_.getInstance().globalcake;
/*  26 */   public static final TTable<?, ?> CAMPAIGNCHART = _Tables_.getInstance().campaigncharts;
/*  27 */   public static final TTable<?, ?> CATBESTPARTNERLOCK = _Tables_.getInstance().catbestpartner;
/*  28 */   public static final TTable<?, ?> CATEXPLORELOCK = _Tables_.getInstance().catexploreobservers;
/*  29 */   public static final TTable<?, ?> CEREMONYLOCK = _Tables_.getInstance().weddingceremony;
/*  30 */   public static final TTable<?, ?> CHANNELLOCK = _Tables_.getInstance().channel2shoppingid;
/*  31 */   public static final TTable<?, ?> CHATGIFTLOCK = _Tables_.getInstance().chatgifttable;
/*  32 */   public static final TTable<?, ?> CHECKORDERLOCK = _Tables_.getInstance().checkorders;
/*  33 */   public static final TTable<?, ?> CHESSLOCK = _Tables_.getInstance().chessgameinfo;
/*  34 */   public static final TTable<?, ?> CHILDRENLOCK = _Tables_.getInstance().breedobservers;
/*  35 */   public static final TTable<?, ?> CHILDRENRATINGRANKLOCK = _Tables_.getInstance().childrenratingrank;
/*  36 */   public static final TTable<?, ?> CHINESEVALENTINELOCK = _Tables_.getInstance().chinesevalentine;
/*  37 */   public static final TTable<?, ?> CLONE_ROLE_NPC_MODEL_LOCK = _Tables_.getInstance().clone_role_npc_model;
/*  38 */   public static final TTable<?, ?> CLONE_ROLE_NPC_MODELS_LOCK = _Tables_.getInstance().clone_role_npc_models;
/*  39 */   public static final TTable<?, ?> CLONE_ROLE_NPC_OF_GANG_LOCK = _Tables_.getInstance().clone_role_npc_of_gang;
/*  40 */   public static final TTable<?, ?> CLONE_ROLE_NPC_OF_GENERAL_LOCK = _Tables_.getInstance().clone_role_npc_of_general;
/*  41 */   public static final TTable<?, ?> COMPETITIONLOCK = _Tables_.getInstance().competition;
/*  42 */   public static final TTable<?, ?> CONSTELLATIONLOCK = _Tables_.getInstance().constellation;
/*  43 */   public static final TTable<?, ?> CORPSGLOBLELOCK = _Tables_.getInstance().corpsglobal;
/*  44 */   public static final TTable<?, ?> CORPSLOCK = _Tables_.getInstance().corps;
/*  45 */   public static final TTable<?, ?> COUNTDOWNLOCK = _Tables_.getInstance().countdowns;
/*  46 */   public static final TTable<?, ?> COUPLERIDELOCK = _Tables_.getInstance().coupleride;
/*  47 */   public static final TTable<?, ?> CROSSBATTLEBETRANKLOCK = _Tables_.getInstance().cross_battle_bet_rank_backups;
/*  48 */   public static final TTable<?, ?> CROSSBATTLELOCK = _Tables_.getInstance().cross_battle_knockout;
/*  49 */   public static final TTable<?, ?> CROSSCOMPETELOCK = _Tables_.getInstance().crosscompete;
/*  50 */   public static final TTable<?, ?> DOUBLELOCK = _Tables_.getInstance().doubletime;
/*  51 */   public static final TTable<?, ?> DRAW_CARNIVAL_GLOBAL_LOCK = _Tables_.getInstance().drawcarnivalactivityglobal;
/*  52 */   public static final TTable<?, ?> DRAWANDGUESSLOCK = _Tables_.getInstance().drawandguess_info;
/*  53 */   public static final TTable<?, ?> FIGHTLOCK = _Tables_.getInstance().fight;
/*  54 */   public static final TTable<?, ?> FIGHTRECORDLOCK = _Tables_.getInstance().fightreord;
/*  55 */   public static final TTable<?, ?> FIGHTVALUERANKLOCK = _Tables_.getInstance().fightvaluerank;
/*  56 */   public static final TTable<?, ?> FIREWORKLOCK = _Tables_.getInstance().globalfirework;
/*  57 */   public static final TTable<?, ?> FLOWERPARADELOCK = _Tables_.getInstance().flowerparade;
/*  58 */   public static final TTable<?, ?> FLOWERPOINTLOCK = _Tables_.getInstance().flowerpointclear;
/*  59 */   public static final TTable<?, ?> GAMESRVLOCK = _Tables_.getInstance().gamesrv;
/*  60 */   public static final TTable<?, ?> GANGGLOBLELOCK = _Tables_.getInstance().gangglobal;
/*  61 */   public static final TTable<?, ?> GANGLOCK = _Tables_.getInstance().faction2worship;
/*  62 */   public static final TTable<?, ?> GANGROBBERLOCK = _Tables_.getInstance().gangrobber;
/*  63 */   public static final TTable<?, ?> GLOBALFLOORLOCK = _Tables_.getInstance().globalfloor;
/*  64 */   public static final TTable<?, ?> GMLOCK = _Tables_.getInstance().gmstatus;
/*  65 */   public static final TTable<?, ?> GRATEFULDELIVERYLOCK = _Tables_.getInstance().grateful_delivery_status;
/*  66 */   public static final TTable<?, ?> GROUPLOCK = _Tables_.getInstance().groups;
/*  67 */   public static final TTable<?, ?> GROUPSHOPPINGLOCK = _Tables_.getInstance().group_shopping_ban_info;
/*  68 */   public static final TTable<?, ?> HOMELANDRANKLOCK = _Tables_.getInstance().homelandrank;
/*  69 */   public static final TTable<?, ?> HOMEWORLDLOCK = _Tables_.getInstance().homeworld2roles;
/*  70 */   public static final TTable<?, ?> HULARANKLOCK = _Tables_.getInstance().hularank;
/*  71 */   public static final TTable<?, ?> HULAWORLDLOCK = _Tables_.getInstance().hulaworld;
/*  72 */   public static final TTable<?, ?> HUNGANGHELPLOCK = _Tables_.getInstance().gang2hunhelp;
/*  73 */   public static final TTable<?, ?> IDIPCMDLOCK = _Tables_.getInstance().idipcmds;
/*  74 */   public static final TTable<?, ?> IDIPCONFIGLOCK = _Tables_.getInstance().idipconfig;
/*  75 */   public static final TTable<?, ?> IDIPMARQUEELOCK = _Tables_.getInstance().idipmarquee;
/*  76 */   public static final TTable<?, ?> IDIPNOTICELOCK = _Tables_.getInstance().idipnotice;
/*  77 */   public static final TTable<?, ?> INDIANALOCK = _Tables_.getInstance().indiana_infos;
/*  78 */   public static final TTable<?, ?> INDIANANUMBERLOCK = _Tables_.getInstance().indiana_number_infos;
/*  79 */   public static final TTable<?, ?> INSTANCELOCK = _Tables_.getInstance().instance;
/*  80 */   public static final TTable<?, ?> INVITATIONLOCK = _Tables_.getInstance().invitation;
/*  81 */   public static final TTable<?, ?> INVITECONFIRMLOCK = _Tables_.getInstance().inviteconfirm_info;
/*  82 */   public static final TTable<?, ?> ITEMLOCK = _Tables_.getInstance().item2marketchannelids;
/*  83 */   public static final TTable<?, ?> ITEMSUBIDLOCK = _Tables_.getInstance().itemsubid2count;
/*  84 */   public static final TTable<?, ?> JIGSAWLOCK = _Tables_.getInstance().jigsawinfo;
/*  85 */   public static final TTable<?, ?> JINGJILOCK = _Tables_.getInstance().jingji;
/*  86 */   public static final TTable<?, ?> JIUXIAOLOCK = _Tables_.getInstance().jiuxiaotable;
/*  87 */   public static final TTable<?, ?> JIUXIAORANKLOCK = _Tables_.getInstance().jiuxiaorank;
/*  88 */   public static final TTable<?, ?> KEJULOCK = _Tables_.getInstance().gloablekeju;
/*  89 */   public static final TTable<?, ?> LADDERLOCK = _Tables_.getInstance().ladderactivity;
/*  90 */   public static final TTable<?, ?> LADDERRANKLOCK = _Tables_.getInstance().cross_ladder_rank_backups;
/*  91 */   public static final TTable<?, ?> LEITAILOCK = _Tables_.getInstance().leitai;
/*  92 */   public static final TTable<?, ?> LEVEL2TIME = _Tables_.getInstance().level2time;
/*  93 */   public static final TTable<?, ?> LOGROLERANKLOCK = _Tables_.getInstance().logrolerank;
/*  94 */   public static final TTable<?, ?> LONNGBOATRACELOCK = _Tables_.getInstance().lonngboatrace;
/*  95 */   public static final TTable<?, ?> MAKEUPLOCK = _Tables_.getInstance().globalmakeup;
/*  96 */   public static final TTable<?, ?> MALLTYPE = _Tables_.getInstance().malltype2refreshtime;
/*  97 */   public static final TTable<?, ?> MARKETCHANNELLOCK = _Tables_.getInstance().channel2marketids;
/*  98 */   public static final TTable<?, ?> MARKETITEMLOCK = _Tables_.getInstance().marketitem;
/*  99 */   public static final TTable<?, ?> MARKETPETLOCK = _Tables_.getInstance().marketpet;
/* 100 */   public static final TTable<?, ?> MARRIAGELOCK = _Tables_.getInstance().givebirthobservers;
/* 101 */   public static final TTable<?, ?> MARRIAGEPARADELOCK = _Tables_.getInstance().marriageparade;
/* 102 */   public static final TTable<?, ?> MASSWEDDINGLOCK = _Tables_.getInstance().masswedding;
/* 103 */   public static final TTable<?, ?> MASTERRANKLOCK = _Tables_.getInstance().masterrank;
/* 104 */   public static final TTable<?, ?> MATCHQUEUELOCK = _Tables_.getInstance().matchqueue;
/* 105 */   public static final TTable<?, ?> MEMORYCOMPETITIONLOCK = _Tables_.getInstance().memorycompetition;
/* 106 */   public static final TTable<?, ?> MENPAIPVPCHART = _Tables_.getInstance().menpaipvpcharts;
/* 107 */   public static final TTable<?, ?> MENPAIPVPLOCK = _Tables_.getInstance().menpaipvp;
/* 108 */   public static final TTable<?, ?> MENPAISTAR = _Tables_.getInstance().menpaistar;
/* 109 */   public static final TTable<?, ?> MENPAISTARCHART = _Tables_.getInstance().menpaistarchart;
/* 110 */   public static final TTable<?, ?> MULTIFIGHTVALUERANKLOCK = _Tables_.getInstance().multifightvaluerank;
/* 111 */   public static final TTable<?, ?> MULTIROLEAWARDLOCK = _Tables_.getInstance().multiroleaward;
/* 112 */   public static final TTable<?, ?> NAME2ROLEIDLOCK = _Tables_.getInstance().name2roleid;
/* 113 */   public static final TTable<?, ?> NEWCHANNELLOCK = _Tables_.getInstance().newerchanneltable;
/* 114 */   public static final TTable<?, ?> NONEREALTIMEFIGHTVALUERANKLOCK = _Tables_.getInstance().nonerealtimefightvaluerank;
/* 115 */   public static final TTable<?, ?> NONEREALTIMEMULTIFIGHTVALUERANKLOCK = _Tables_.getInstance().nonerealtimemultifightvaluerank;
/* 116 */   public static final TTable<?, ?> NONEREALTIMEOCCMFVRANKLOCK = _Tables_.getInstance().nonerealtimeoccmfvrank;
/* 117 */   public static final TTable<?, ?> NONEREALTIMEPETYAOLIRANKLOCK = _Tables_.getInstance().nonerealtimepetyaolirank;
/* 118 */   public static final TTable<?, ?> NONEREALTIMEROLELEVELRANKLOCK = _Tables_.getInstance().nonerealtimerolelevelrank;
/* 119 */   public static final TTable<?, ?> NONEREALTIMESNSROLESLOCK = _Tables_.getInstance().nonerealtimesnsroles;
/* 120 */   public static final TTable<?, ?> NOTICELOCK = _Tables_.getInstance().notice;
/* 121 */   public static final TTable<?, ?> OCCMFVRANKLOCK = _Tables_.getInstance().occmfvrank;
/* 122 */   public static final TTable<?, ?> OCPBOSSRANKLOCK = _Tables_.getInstance().ocpbossrank;
/* 123 */   public static final TTable<?, ?> ONLINEROLEINFOLOCK = _Tables_.getInstance().onlineroleinfo;
/* 124 */   public static final TTable<?, ?> ONLINEUSERINFOLOCK = _Tables_.getInstance().onlineuserinfo;
/* 125 */   public static final TTable<?, ?> PARASELENERANKLOCK = _Tables_.getInstance().paraselenerank;
/* 126 */   public static final TTable<?, ?> PETARENARANKLOCK = _Tables_.getInstance().petarenarank;
/* 127 */   public static final TTable<?, ?> PETLOCK = _Tables_.getInstance().pet2marketchannelids;
/* 128 */   public static final TTable<?, ?> PETYAOLIRANKLOCK = _Tables_.getInstance().petyaolirank;
/* 129 */   public static final TTable<?, ?> PICTUREQUESTIONLOCK = _Tables_.getInstance().picturequestion;
/* 130 */   public static final TTable<?, ?> POPULARITYRANKLOCK = _Tables_.getInstance().friends_circle_popularity_rank;
/* 131 */   public static final TTable<?, ?> PRISONRANKLOCK = _Tables_.getInstance().prisonrank;
/* 132 */   public static final TTable<?, ?> QMHWLOCK = _Tables_.getInstance().qmhw;
/* 133 */   public static final TTable<?, ?> QMHWRANKLOCK = _Tables_.getInstance().qmhwrank;
/* 134 */   public static final TTable<?, ?> REDGIFTLOCK = _Tables_.getInstance().redgift;
/* 135 */   public static final TTable<?, ?> RELATEDBOSSLOCK = _Tables_.getInstance().relatedboss;
/* 136 */   public static final TTable<?, ?> ROLEBOSSRANKLOCK = _Tables_.getInstance().rolebossrank;
/* 137 */   public static final TTable<?, ?> ROLEGIVEFLOWERLOCK = _Tables_.getInstance().rolegiveflowerrank;
/* 138 */   public static final TTable<?, ?> ROLEJINGJIRANKLOCK = _Tables_.getInstance().jingjidailytrankbackup;
/* 139 */   public static final TTable<?, ?> ROLEKEJURANKLOCK = _Tables_.getInstance().rolekejurank;
/* 140 */   public static final TTable<?, ?> ROLELEVELRANKLOCK = _Tables_.getInstance().rolelevelrank;
/* 141 */   public static final TTable<?, ?> ROLELOCK = _Tables_.getInstance().arenascore;
/* 142 */   public static final TTable<?, ?> ROLERECEIVEFLOWERLOCK = _Tables_.getInstance().rolereceiveflowerrank;
/* 143 */   public static final TTable<?, ?> SHANGHUIITEMLOCK = _Tables_.getInstance().shanghui;
/* 144 */   public static final TTable<?, ?> SHOPPINGGROUPLOCK = _Tables_.getInstance().shopping_group_info;
/* 145 */   public static final TTable<?, ?> SHOPPINGLOCK = _Tables_.getInstance().roleshoppinginfo;
/* 146 */   public static final TTable<?, ?> SINGLEBATTLELOCK = _Tables_.getInstance().battlegather;
/* 147 */   public static final TTable<?, ?> SINGLECROSSFIELDRANKLOCK = _Tables_.getInstance().single_cross_field_rank_backups;
/* 148 */   public static final TTable<?, ?> STORYWALLLOCK = _Tables_.getInstance().storywall;
/* 149 */   public static final TTable<?, ?> SURPRISESCHEDULE = _Tables_.getInstance().globalsurpriseschedule;
/* 150 */   public static final TTable<?, ?> SWORNBUILDERLOCK = _Tables_.getInstance().swornbuilder;
/* 151 */   public static final TTable<?, ?> SWORNLOCK = _Tables_.getInstance().sworn;
/* 152 */   public static final TTable<?, ?> SYSTEMAWARD = _Tables_.getInstance().systemaward;
/* 153 */   public static final TTable<?, ?> SYSTEMCOMPENSATELOCK = _Tables_.getInstance().systemcompensate;
/* 154 */   public static final TTable<?, ?> TEAMLOCK = _Tables_.getInstance().team;
/* 155 */   public static final TTable<?, ?> TIMEFLOWLOCK = _Tables_.getInstance().timeflows;
/* 156 */   public static final TTable<?, ?> TRADETYPELOCK = _Tables_.getInstance().tradetype2banitems;
/* 157 */   public static final TTable<?, ?> TREASUREBOXLOCK = _Tables_.getInstance().treasureboxaward;
/* 158 */   public static final TTable<?, ?> USERLOCK = _Tables_.getInstance().gm;
/* 159 */   public static final TTable<?, ?> UUIDLOCK = _Tables_.getInstance().uuid;
/* 160 */   public static final TTable<?, ?> VISIBLEMONSTERLOCK = _Tables_.getInstance().visiblemonster;
/* 161 */   public static final TTable<?, ?> WANTEDRANKLOCK = _Tables_.getInstance().wantedrank;
/* 162 */   public static final TTable<?, ?> WORDQUESTIONLOCK = _Tables_.getInstance().wordquestion;
/* 163 */   public static final TTable<?, ?> WORLDCOUNTERLOCK = _Tables_.getInstance().worldcounter;
/* 164 */   public static final TTable<?, ?> WORLDGOALLOCK = _Tables_.getInstance().worldgoals;
/* 165 */   public static final TTable<?, ?> WORLDQUESTIONLOCK = _Tables_.getInstance().worldquestion;
/* 166 */   public static final TTable<?, ?> XIAOHUIKUAIPAOGLOBALLOCK = _Tables_.getInstance().activityid2xiaohuikuaipaoglobalinfo;
/*     */ }


/* Location:              D:\桌面\山海\gsxdbdebug.jar!\xtable\Locks.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       0.7.1
 */