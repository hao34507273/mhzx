/*     */ package mzm.gsp.exploit.main;
/*     */ 
/*     */ import java.util.Map;
/*     */ import java.util.Map.Entry;
/*     */ import xbean.ExploitData;
/*     */ import xbean.ExploitDatas;
/*     */ import xbean.ExploitTargetData;
/*     */ 
/*     */ public class RoleExploitInfo
/*     */ {
/*     */   private final long roleId;
/*     */   private ExploitDatas xExploitDatas;
/*     */   
/*     */   public RoleExploitInfo(long roleId, boolean remainLock)
/*     */   {
/*  16 */     this.roleId = roleId;
/*  17 */     if (remainLock)
/*     */     {
/*  19 */       this.xExploitDatas = xtable.Role2exploit_data.get(Long.valueOf(roleId));
/*     */     }
/*     */     else
/*     */     {
/*  23 */       this.xExploitDatas = xtable.Role2exploit_data.select(Long.valueOf(roleId));
/*     */     }
/*     */   }
/*     */   
/*     */   public long getRoleId()
/*     */   {
/*  29 */     return this.roleId;
/*     */   }
/*     */   
/*     */   public boolean hasXData()
/*     */   {
/*  34 */     return this.xExploitDatas != null;
/*     */   }
/*     */   
/*     */   public void createExploitInfo()
/*     */   {
/*  39 */     if (this.xExploitDatas != null)
/*     */     {
/*  41 */       return;
/*     */     }
/*  43 */     this.xExploitDatas = xbean.Pod.newExploitDatas();
/*  44 */     xtable.Role2exploit_data.insert(Long.valueOf(this.roleId), this.xExploitDatas);
/*     */   }
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   public boolean changeTarget(int activityId, int targetId, int state, int param)
/*     */   {
/*  60 */     ExploitData xExploitData = (ExploitData)this.xExploitDatas.getActivity2exploit_data().get(Integer.valueOf(activityId));
/*  61 */     if (xExploitData == null)
/*     */     {
/*  63 */       xExploitData = xbean.Pod.newExploitData();
/*  64 */       this.xExploitDatas.getActivity2exploit_data().put(Integer.valueOf(activityId), xExploitData);
/*     */     }
/*  66 */     Map<Integer, ExploitTargetData> xTargets = xExploitData.getTarget_datas();
/*  67 */     ExploitTargetData xData = (ExploitTargetData)xTargets.get(Integer.valueOf(targetId));
/*  68 */     if (xData == null)
/*     */     {
/*  70 */       xData = xbean.Pod.newExploitTargetData();
/*  71 */       xTargets.put(Integer.valueOf(targetId), xData);
/*     */     }
/*  73 */     xData.setTarget_param(param);
/*  74 */     xData.setTarget_state(state);
/*  75 */     return true;
/*     */   }
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   public int getTargetState(int activityId, int targetId)
/*     */   {
/*  86 */     ExploitTargetData xData = getTargetData(activityId, targetId);
/*  87 */     if (xData == null)
/*     */     {
/*  89 */       return 1;
/*     */     }
/*  91 */     return xData.getTarget_state();
/*     */   }
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   public int getTargetParam(int activityId, int targetId)
/*     */   {
/* 103 */     ExploitTargetData xData = getTargetData(activityId, targetId);
/* 104 */     if (xData == null)
/*     */     {
/* 106 */       return 0;
/*     */     }
/* 108 */     return xData.getTarget_param();
/*     */   }
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   ExploitTargetData getTargetData(int activityId, int targetId)
/*     */   {
/* 119 */     return (ExploitTargetData)getAllTarget(activityId).get(Integer.valueOf(targetId));
/*     */   }
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   Map<Integer, ExploitTargetData> getAllTarget(int activityId)
/*     */   {
/* 131 */     if (this.xExploitDatas == null)
/*     */     {
/* 133 */       return java.util.Collections.EMPTY_MAP;
/*     */     }
/* 135 */     ExploitData xExploitData = (ExploitData)this.xExploitDatas.getActivity2exploit_data().get(Integer.valueOf(activityId));
/* 136 */     if (xExploitData == null)
/*     */     {
/* 138 */       return java.util.Collections.EMPTY_MAP;
/*     */     }
/* 140 */     return xExploitData.getTarget_datas();
/*     */   }
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   Integer getStageData(int activityId, int needNum)
/*     */   {
/* 151 */     Integer state = (Integer)getAllStage(activityId).get(Integer.valueOf(needNum));
/* 152 */     if (state == null)
/*     */     {
/* 154 */       return Integer.valueOf(1);
/*     */     }
/* 156 */     return state;
/*     */   }
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   Map<Integer, Integer> getAllStage(int activityId)
/*     */   {
/* 168 */     if (this.xExploitDatas == null)
/*     */     {
/* 170 */       return java.util.Collections.EMPTY_MAP;
/*     */     }
/* 172 */     ExploitData xExploitData = (ExploitData)this.xExploitDatas.getActivity2exploit_data().get(Integer.valueOf(activityId));
/* 173 */     if (xExploitData == null)
/*     */     {
/* 175 */       return java.util.Collections.EMPTY_MAP;
/*     */     }
/* 177 */     return xExploitData.getStage_datas();
/*     */   }
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   void setStageState(int activityId, int needNum, int state)
/*     */   {
/* 188 */     ExploitData xExploitData = (ExploitData)this.xExploitDatas.getActivity2exploit_data().get(Integer.valueOf(activityId));
/* 189 */     xExploitData.getStage_datas().put(Integer.valueOf(needNum), Integer.valueOf(state));
/*     */   }
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   int getStageRate(int activityId)
/*     */   {
/* 200 */     if (this.xExploitDatas == null)
/*     */     {
/* 202 */       return 0;
/*     */     }
/* 204 */     ExploitData xExploitData = (ExploitData)this.xExploitDatas.getActivity2exploit_data().get(Integer.valueOf(activityId));
/* 205 */     if (xExploitData == null)
/*     */     {
/* 207 */       return 0;
/*     */     }
/* 209 */     return xExploitData.getStage_rate();
/*     */   }
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   boolean setStageRate(int activityId, int stageRate)
/*     */   {
/* 220 */     if (this.xExploitDatas == null)
/*     */     {
/* 222 */       return false;
/*     */     }
/* 224 */     ExploitData xExploitData = (ExploitData)this.xExploitDatas.getActivity2exploit_data().get(Integer.valueOf(activityId));
/* 225 */     if (xExploitData == null)
/*     */     {
/* 227 */       return false;
/*     */     }
/* 229 */     xExploitData.setStage_rate(stageRate);
/* 230 */     return true;
/*     */   }
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   java.util.Set<Integer> getXSateTargetIds(int activityId, int state)
/*     */   {
/* 241 */     java.util.Set<Integer> targetIds = new java.util.HashSet();
/* 242 */     for (Map.Entry<Integer, ExploitTargetData> entry : getAllTarget(activityId).entrySet())
/*     */     {
/* 244 */       if (((ExploitTargetData)entry.getValue()).getTarget_state() == state)
/*     */       {
/* 246 */         targetIds.add(entry.getKey());
/*     */       }
/*     */     }
/* 249 */     return targetIds;
/*     */   }
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   java.util.Set<Integer> getXSateStageIds(int activityId, int state)
/*     */   {
/* 260 */     java.util.Set<Integer> stageIds = new java.util.HashSet();
/* 261 */     for (Map.Entry<Integer, Integer> entry : getAllStage(activityId).entrySet())
/*     */     {
/* 263 */       if (((Integer)entry.getValue()).intValue() == state)
/*     */       {
/* 265 */         stageIds.add(entry.getKey());
/*     */       }
/*     */     }
/* 268 */     return stageIds;
/*     */   }
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   void removeActivityInfo(int activityId)
/*     */   {
/* 278 */     if (this.xExploitDatas == null)
/*     */     {
/* 280 */       return;
/*     */     }
/* 282 */     this.xExploitDatas.getActivity2exploit_data().remove(Integer.valueOf(activityId));
/*     */   }
/*     */ }


/* Location:              D:\桌面\山海\gsxdbdebug.jar!\mzm\gsp\exploit\main\RoleExploitInfo.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       0.7.1
 */