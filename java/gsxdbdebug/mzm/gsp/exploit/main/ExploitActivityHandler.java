/*     */ package mzm.gsp.exploit.main;
/*     */ 
/*     */ import java.util.ArrayList;
/*     */ import java.util.HashMap;
/*     */ import java.util.List;
/*     */ import java.util.Map;
/*     */ import java.util.Map.Entry;
/*     */ import java.util.Set;
/*     */ import mzm.gsp.activity.main.ActivityHandler;
/*     */ import mzm.gsp.activity.main.ActivityHandler.ActivityStartType;
/*     */ import mzm.gsp.activity.main.ActivityInterface;
/*     */ import mzm.gsp.award.main.AwardInterface;
/*     */ import mzm.gsp.award.main.AwardModel;
/*     */ import mzm.gsp.award.main.AwardReason;
/*     */ import mzm.gsp.exploit.confbean.SExploitConst;
/*     */ import mzm.gsp.exploit.confbean.SExploitTargetCfg;
/*     */ import mzm.gsp.exploit.confbean.SExploitTargetMapCfg;
/*     */ import mzm.gsp.mail.main.MailAttachment;
/*     */ import mzm.gsp.mail.main.MailInterface;
/*     */ import mzm.gsp.tlog.LogReason;
/*     */ import mzm.gsp.tlog.TLogArg;
/*     */ import xbean.ExploitTargetData;
/*     */ 
/*     */ public class ExploitActivityHandler implements ActivityHandler
/*     */ {
/*     */   public void initData(String userid, long roleId, int turn, int activityid)
/*     */   {
/*  28 */     if (!ExploitManager.isExploitOpen(roleId, false))
/*     */     {
/*  30 */       throw new IllegalStateException(String.format("[exploit]ExploitActivityHandler.initData@pls ignore this exception|roleid=%d|userid=%s|activity_cfgid=%d", new Object[] { Long.valueOf(roleId), userid, Integer.valueOf(activityid) }));
/*     */     }
/*     */     
/*     */ 
/*     */ 
/*  35 */     sendRewardAndclear(roleId, activityid);
/*  36 */     initActivityInfo(userid, roleId, activityid);
/*     */   }
/*     */   
/*     */ 
/*     */   public AwardReason getRecommendAwardReason()
/*     */   {
/*  42 */     return null;
/*     */   }
/*     */   
/*     */ 
/*     */   public List<mzm.gsp.activity.main.ActivityStage> getActivityStages()
/*     */   {
/*  48 */     return null;
/*     */   }
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   public void onActivityStart(ActivityHandler.ActivityStartType activityStartType, int activityid) {}
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   public void onActivityStageStart(int stage, boolean startAgain, int activityid) {}
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   public void onActivityEnd(int activityid) {}
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   static void sendRewardAndclear(long roleId, int activityid)
/*     */   {
/*  77 */     RoleExploitInfo roleExploitInfo = new RoleExploitInfo(roleId, true);
/*     */     
/*  79 */     Map<Integer, ExploitTargetData> activityDate = roleExploitInfo.getAllTarget(activityid);
/*     */     
/*  81 */     if (activityDate.size() > 0)
/*     */     {
/*     */ 
/*  84 */       sendReward(roleExploitInfo, activityid);
/*     */       
/*  86 */       roleExploitInfo.removeActivityInfo(activityid);
/*     */     }
/*     */   }
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   private static void sendReward(RoleExploitInfo roleExploitInfo, int activityid)
/*     */   {
/*  98 */     List<AwardModel> awardModelList = null;
/*     */     
/*     */ 
/*     */ 
/* 102 */     Set<Integer> targets = roleExploitInfo.getXSateTargetIds(activityid, 2);
/* 103 */     AwardReason targetAwardReason; if (targets.size() > 0)
/*     */     {
/* 105 */       targetAwardReason = new AwardReason(LogReason.EXPLOIT_TARGET_MAIl_AWARD);
/* 106 */       targetAwardReason.setJustQuery(true);
/* 107 */       for (Integer targetId : targets)
/*     */       {
/* 109 */         int rewardId = ExploitManager.getTargetAwardId(activityid, targetId.intValue());
/* 110 */         if (rewardId > 0)
/*     */         {
/*     */ 
/*     */ 
/* 114 */           AwardModel awardModel = AwardInterface.getRoleAwardModel(rewardId, roleExploitInfo.getRoleId(), -1, targetAwardReason);
/* 115 */           if (awardModel != null)
/*     */           {
/*     */ 
/*     */ 
/* 119 */             if (awardModelList == null)
/*     */             {
/* 121 */               awardModelList = new ArrayList();
/*     */             }
/* 123 */             awardModelList.add(awardModel);
/*     */           }
/*     */         }
/*     */       } }
/* 127 */     Set<Integer> stages = roleExploitInfo.getXSateStageIds(activityid, 2);
/* 128 */     AwardReason stageAwardReason; if (stages.size() > 0)
/*     */     {
/* 130 */       stageAwardReason = new AwardReason(LogReason.EXPLOIT_STAGE_MAIl_AWARD);
/* 131 */       stageAwardReason.setJustQuery(true);
/* 132 */       for (Integer stageId : stages)
/*     */       {
/* 134 */         int rewardId = ExploitManager.getStageAwardId(activityid, stageId.intValue());
/* 135 */         if (rewardId > 0)
/*     */         {
/*     */ 
/*     */ 
/* 139 */           AwardModel awardModel = AwardInterface.getRoleFixAwardModel(rewardId, roleExploitInfo.getRoleId(), stageAwardReason);
/* 140 */           if (awardModel != null)
/*     */           {
/*     */ 
/*     */ 
/* 144 */             if (awardModelList == null)
/*     */             {
/* 146 */               awardModelList = new ArrayList();
/*     */             }
/* 148 */             awardModelList.add(awardModel);
/*     */           }
/*     */         }
/*     */       } }
/* 152 */     if ((awardModelList != null) && (awardModelList.size() > 0))
/*     */     {
/* 154 */       MailAttachment mailAttachment = new MailAttachment();
/* 155 */       AwardInterface.fillMailAttachMentBy(awardModelList, mailAttachment);
/* 156 */       MailInterface.synBuildAndSendMail(roleExploitInfo.getRoleId(), SExploitConst.getInstance().EXPLOIT_ACTIVITY_MAIL_ID, new ArrayList(), new ArrayList(), mailAttachment, new TLogArg(LogReason.EXPLOIT_AWARD_MODEL_MAIl_AWARD));
/*     */     }
/*     */   }
/*     */   
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   private static void initActivityInfo(String userid, long roleId, int activityid)
/*     */   {
/* 171 */     SExploitTargetMapCfg cfgActivityId = SExploitTargetMapCfg.get(activityid);
/* 172 */     if (cfgActivityId == null)
/*     */     {
/* 174 */       return;
/*     */     }
/*     */     
/*     */ 
/* 178 */     for (Map.Entry<Integer, SExploitTargetCfg> entry : cfgActivityId.targetId2CfgMap.entrySet())
/*     */     {
/* 180 */       int targetId = ((Integer)entry.getKey()).intValue();
/* 181 */       int finishTimes = ActivityInterface.getActivityCount(userid, roleId, targetId, true);
/* 182 */       if (finishTimes > 0)
/*     */       {
/* 184 */         ExploitManager.updateTargetProgress(roleId, activityid, targetId, finishTimes);
/*     */       }
/*     */     }
/*     */   }
/*     */ }


/* Location:              D:\桌面\山海\gsxdbdebug.jar!\mzm\gsp\exploit\main\ExploitActivityHandler.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       0.7.1
 */