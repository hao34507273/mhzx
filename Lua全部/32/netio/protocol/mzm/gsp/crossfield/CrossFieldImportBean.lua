local OctetsStream = require("netio.OctetsStream")
local CrossFieldErrorCode = require("netio.protocol.mzm.gsp.crossfield.CrossFieldErrorCode")
local CrossFieldMatchProcess = require("netio.protocol.mzm.gsp.crossfield.CrossFieldMatchProcess")
local CrossFieldResult = require("netio.protocol.mzm.gsp.crossfield.CrossFieldResult")
local GetCrossFieldRankContext = require("netio.protocol.mzm.gsp.crossfield.GetCrossFieldRankContext")
local GetCrossFieldRank_ClientReq = require("netio.protocol.mzm.gsp.crossfield.GetCrossFieldRank_ClientReq")
local GetRoleCrossFieldRankContext = require("netio.protocol.mzm.gsp.crossfield.GetRoleCrossFieldRankContext")
local GetRoleCrossFieldRank_ClientReq = require("netio.protocol.mzm.gsp.crossfield.GetRoleCrossFieldRank_ClientReq")
local ReportRoleCrossFieldRankInfoContext = require("netio.protocol.mzm.gsp.crossfield.ReportRoleCrossFieldRankInfoContext")
local CrossFieldImportBean = class("CrossFieldImportBean")
function CrossFieldImportBean:ctor(_CrossFieldErrorCode, _CrossBattleMatchProcess, _CrossBattleResult, _GetCrossFieldRankContext, _GetCrossFieldRank_ClientReq, _GetRoleCrossFieldRankContext, _GetRoleCrossFieldRank_ClientReq, _ReportRoleCrossFieldRankInfoContext)
  self._CrossFieldErrorCode = _CrossFieldErrorCode or CrossFieldErrorCode.new()
  self._CrossBattleMatchProcess = _CrossBattleMatchProcess or CrossFieldMatchProcess.new()
  self._CrossBattleResult = _CrossBattleResult or CrossFieldResult.new()
  self._GetCrossFieldRankContext = _GetCrossFieldRankContext or GetCrossFieldRankContext.new()
  self._GetCrossFieldRank_ClientReq = _GetCrossFieldRank_ClientReq or GetCrossFieldRank_ClientReq.new()
  self._GetRoleCrossFieldRankContext = _GetRoleCrossFieldRankContext or GetRoleCrossFieldRankContext.new()
  self._GetRoleCrossFieldRank_ClientReq = _GetRoleCrossFieldRank_ClientReq or GetRoleCrossFieldRank_ClientReq.new()
  self._ReportRoleCrossFieldRankInfoContext = _ReportRoleCrossFieldRankInfoContext or ReportRoleCrossFieldRankInfoContext.new()
end
function CrossFieldImportBean:marshal(os)
  self._CrossFieldErrorCode:marshal(os)
  self._CrossBattleMatchProcess:marshal(os)
  self._CrossBattleResult:marshal(os)
  self._GetCrossFieldRankContext:marshal(os)
  self._GetCrossFieldRank_ClientReq:marshal(os)
  self._GetRoleCrossFieldRankContext:marshal(os)
  self._GetRoleCrossFieldRank_ClientReq:marshal(os)
  self._ReportRoleCrossFieldRankInfoContext:marshal(os)
end
function CrossFieldImportBean:unmarshal(os)
  self._CrossFieldErrorCode = CrossFieldErrorCode.new()
  self._CrossFieldErrorCode:unmarshal(os)
  self._CrossBattleMatchProcess = CrossFieldMatchProcess.new()
  self._CrossBattleMatchProcess:unmarshal(os)
  self._CrossBattleResult = CrossFieldResult.new()
  self._CrossBattleResult:unmarshal(os)
  self._GetCrossFieldRankContext = GetCrossFieldRankContext.new()
  self._GetCrossFieldRankContext:unmarshal(os)
  self._GetCrossFieldRank_ClientReq = GetCrossFieldRank_ClientReq.new()
  self._GetCrossFieldRank_ClientReq:unmarshal(os)
  self._GetRoleCrossFieldRankContext = GetRoleCrossFieldRankContext.new()
  self._GetRoleCrossFieldRankContext:unmarshal(os)
  self._GetRoleCrossFieldRank_ClientReq = GetRoleCrossFieldRank_ClientReq.new()
  self._GetRoleCrossFieldRank_ClientReq:unmarshal(os)
  self._ReportRoleCrossFieldRankInfoContext = ReportRoleCrossFieldRankInfoContext.new()
  self._ReportRoleCrossFieldRankInfoContext:unmarshal(os)
end
return CrossFieldImportBean
