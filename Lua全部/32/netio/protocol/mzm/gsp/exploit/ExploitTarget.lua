local OctetsStream = require("netio.OctetsStream")
local AwardInfoBean = require("netio.protocol.mzm.gsp.award.AwardInfoBean")
local ExploitTarget = class("ExploitTarget")
function ExploitTarget:ctor(target_state, target_param, target_award_bean)
  self.target_state = target_state or nil
  self.target_param = target_param or nil
  self.target_award_bean = target_award_bean or AwardInfoBean.new()
end
function ExploitTarget:marshal(os)
  os:marshalInt32(self.target_state)
  os:marshalInt32(self.target_param)
  self.target_award_bean:marshal(os)
end
function ExploitTarget:unmarshal(os)
  self.target_state = os:unmarshalInt32()
  self.target_param = os:unmarshalInt32()
  self.target_award_bean = AwardInfoBean.new()
  self.target_award_bean:unmarshal(os)
end
return ExploitTarget
