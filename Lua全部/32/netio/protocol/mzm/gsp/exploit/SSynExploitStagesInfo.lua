local SSynExploitStagesInfo = class("SSynExploitStagesInfo")
SSynExploitStagesInfo.TYPEID = 12616197
function SSynExploitStagesInfo:ctor(activity_id, finish_num, stages)
  self.id = 12616197
  self.activity_id = activity_id or nil
  self.finish_num = finish_num or nil
  self.stages = stages or {}
end
function SSynExploitStagesInfo:marshal(os)
  os:marshalInt32(self.activity_id)
  os:marshalInt32(self.finish_num)
  local _size_ = 0
  for _, _ in pairs(self.stages) do
    _size_ = _size_ + 1
  end
  os:marshalCompactUInt32(_size_)
  for k, v in pairs(self.stages) do
    os:marshalInt32(k)
    os:marshalInt32(v)
  end
end
function SSynExploitStagesInfo:unmarshal(os)
  self.activity_id = os:unmarshalInt32()
  self.finish_num = os:unmarshalInt32()
  for _size_ = os:unmarshalCompactUInt32(), 1, -1 do
    local k = os:unmarshalInt32()
    local v = os:unmarshalInt32()
    self.stages[k] = v
  end
end
function SSynExploitStagesInfo:sizepolicy(size)
  return size <= 65535
end
return SSynExploitStagesInfo
