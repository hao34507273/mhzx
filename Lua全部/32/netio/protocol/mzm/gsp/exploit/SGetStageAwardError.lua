local SGetStageAwardError = class("SGetStageAwardError")
SGetStageAwardError.TYPEID = 12616198
SGetStageAwardError.STAGE_NOT_FINISHED = 1
SGetStageAwardError.STAGE_ALREADY_REWARDED = 2
function SGetStageAwardError:ctor(error_code, params)
  self.id = 12616198
  self.error_code = error_code or nil
  self.params = params or {}
end
function SGetStageAwardError:marshal(os)
  os:marshalInt32(self.error_code)
  os:marshalCompactUInt32(table.getn(self.params))
  for _, v in ipairs(self.params) do
    os:marshalString(v)
  end
end
function SGetStageAwardError:unmarshal(os)
  self.error_code = os:unmarshalInt32()
  for _size_ = os:unmarshalCompactUInt32(), 1, -1 do
    local v = os:unmarshalString()
    table.insert(self.params, v)
  end
end
function SGetStageAwardError:sizepolicy(size)
  return size <= 65535
end
return SGetStageAwardError
