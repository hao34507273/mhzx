local SGangNormalResult = class("SGangNormalResult")
SGangNormalResult.TYPEID = 12589828
SGangNormalResult.CREATE_GANG_ILLEGAL_NAME = 0
SGangNormalResult.CREATE_GANG_ILLEGAL_PURPOSE = 1
SGangNormalResult.CREATE_GANG_NEED_MORE_YUANBAO = 2
SGangNormalResult.CREATE_SUCCESS = 3
SGangNormalResult.SEARCH_GANG_NOT_FIND = 4
SGangNormalResult.XUETU_NUM_FULL = 5
SGangNormalResult.BANGZHONG_NUM_FULL = 6
SGangNormalResult.REJECT_JOIN_GANG = 7
SGangNormalResult.TARGET_ALREADY_JOIN_GANG = 8
SGangNormalResult.TARGET_ALREADY_IN_APPLY_LIST = 9
SGangNormalResult.QUIT_GANG_SUCCESS = 10
SGangNormalResult.INVITE_JOIN_GANG_SUCCESS = 11
SGangNormalResult.INVITE_SAME_GANG_ERROR = 12
SGangNormalResult.ADD_APPLY_LIST_SUCCESS = 13
SGangNormalResult.DONATE_SUCCESS = 14
SGangNormalResult.GANG_RENAME_SUCCESS = 16
SGangNormalResult.GANG_RENAME_NOT_COOL_DOWN = 17
SGangNormalResult.GANG_CREATE_FAILED_NAME_DUPLICATE = 18
SGangNormalResult.GANG_RENAME_FAILED_NAME_DUPLICATE = 19
SGangNormalResult.XUE_TU_MAX_LEVEL_SET_SUCCESS = 20
SGangNormalResult.TANHE_SUCCESS = 21
SGangNormalResult.FORBIDDEN_TALK_MAX_COUNT = 22
SGangNormalResult.KICK_MEMBER_MAX_COUNT = 23
SGangNormalResult.KICK_MEMBER_NEED_MORE_VIGOR = 24
SGangNormalResult.RENMING_ACTION_SUCCESS = 25
SGangNormalResult.CHANGE_LEADER_ACTION_SUCCESS = 26
SGangNormalResult.GANG_CHANGE_LEADER_ILLEGAL = 27
SGangNormalResult.GANG_DESIGN_DUTY_SUCCESS = 28
SGangNormalResult.GANG_ANNOUNCEMENT_TIMES_OUT = 29
SGangNormalResult.CONFIRM_JOIN_GANG = 30
SGangNormalResult.ERR_ALREADY_HAVE_GANG = 31
SGangNormalResult.ERR_BUILDING_ALREADY_LEVELUP_SUCCESS = 32
SGangNormalResult.ERR_TANHE_BANGZHU_OFFLINE_TIME_NOT_ENOUGH = 33
SGangNormalResult.ERR_YAOCAI_IS_OUT_OF_SALE = 34
SGangNormalResult.ERR_BAG_IS_FULL = 35
SGangNormalResult.ERR_GET_MIFANG_JOIN_GANG_AFTER_TRIGGER = 36
SGangNormalResult.FULI_GET_SUCCESS = 37
SGangNormalResult.ERR_BUY_YAOCAI_NOT_EXIST = 38
SGangNormalResult.ERR_VIGOR_NOT_ENOUGH = 39
SGangNormalResult.ERR_GET_MIFANG_BANGGONG_NOT_ENOUGH = 40
SGangNormalResult.ERR_FULI_COUNT_IS_MAX = 41
SGangNormalResult.ERR_FULI_JOIN_NOT_AFTER_3_DAY = 42
SGangNormalResult.ERR_REDEEM_BANGGONG_NOT_AFTER_3_DAY = 43
SGangNormalResult.ERR_FULI_ALREADY_GET = 44
SGangNormalResult.NONE_GANG = 45
SGangNormalResult.GANG_INFO_ERROR = 46
SGangNormalResult.DISMISS_SUCCESS = 47
SGangNormalResult.DISMISS_FAIL = 48
SGangNormalResult.MODIFIED_SIGN_STRING_SUCCESS = 49
SGangNormalResult.MODIFIED_SIGN_STRING_FAIL = 50
SGangNormalResult.CANT_SIGN_SAME_DAY = 51
SGangNormalResult.CANT_DUIHUAN_BANGGONG_WITHMAX = 52
SGangNormalResult.ERR_LIANYAO_YAOCAI_NOT_ENOUGH = 53
SGangNormalResult.ERR_SIGN_STRING_HAS_SENSITIVE_WORDS = 54
SGangNormalResult.ERR_DUTY_MEMBER_ENOUGH = 55
SGangNormalResult.GANG_DESIGN_DUTY_FAIL = 56
SGangNormalResult.GANG_NOT_EXIST = 57
SGangNormalResult.YOU_NOT_IN_GANG_NOW = 58
SGangNormalResult.YUAN_BAO_NOT_ENOUGH = 59
SGangNormalResult.CUT_YUAN_BAO_FAIL = 60
SGangNormalResult.STATUS_ERROR = 61
SGangNormalResult.COMBINE_GANG_APPLY__NO_RIGHT = 101
SGangNormalResult.COMBINE_GANG_APPLY__GANG_NOT_EXIST = 102
SGangNormalResult.COMBINE_GANG_APPLY__ALREADY = 103
SGangNormalResult.COMBINE_GANG_APPLY__APPLICANT = 104
SGangNormalResult.COMBINE_GANG_APPLY__CROSS_COMPETE_SIGNUP = 105
SGangNormalResult.COMBINE_GANG_APPLY_REP__NO_RIGHT = 111
SGangNormalResult.COMBINE_GANG_APPLY_REP__TIMEOUT = 112
SGangNormalResult.COMBINE_GANG_CANCEL__NO_RIGHT = 121
SGangNormalResult.COMBINE_GANG_CANCEL__TIMEOUT = 122
SGangNormalResult.GET_COMBINE_GANG_LIST__VITALITY = 131
SGangNormalResult.CREATE_GANG_TEAM__NO_GANG = 201
SGangNormalResult.CREATE_GANG_TEAM__IN_TEAM = 202
SGangNormalResult.CREATE_GANG_TEAM__NAME_TOO_LONG = 203
SGangNormalResult.CREATE_GANG_TEAM__NAME_ILLEGAL = 204
SGangNormalResult.CREATE_GANG_TEAM__COOL_DOWN = 205
SGangNormalResult.CHANGE_GANG_TEAM_NAME__NO_GANG = 211
SGangNormalResult.CHANGE_GANG_TEAM_NAME__NOT_IN_TEAM = 212
SGangNormalResult.CHANGE_GANG_TEAM_NAME__NOT_LEADER = 213
SGangNormalResult.CHANGE_GANG_TEAM_NAME__NAME_TOO_LONG = 214
SGangNormalResult.CHANGE_GANG_TEAM_NAME__NAME_ILLEGAL = 215
SGangNormalResult.JOIN_GANG_TEAM__NO_GANG = 221
SGangNormalResult.JOIN_GANG_TEAM__IN_TEAM = 222
SGangNormalResult.JOIN_GANG_TEAM__TEAM_NOT_EXIST = 223
SGangNormalResult.JOIN_GANG_TEAM__IN_APPLICANT_LIST = 224
SGangNormalResult.JOIN_GANG_TEAM__TEAM_FULL = 225
SGangNormalResult.JOIN_GANG_TEAM__SUCCEED = 226
SGangNormalResult.AUTO_JOIN_GANG_TEAM__NO_GANG = 231
SGangNormalResult.AUTO_JOIN_GANG_TEAM__IN_TEAM = 232
SGangNormalResult.AUTO_JOIN_GANG_TEAM__SUCCEED = 233
SGangNormalResult.JOIN_GANG_TEAM_REP__NO_GANG = 241
SGangNormalResult.JOIN_GANG_TEAM_REP__NOT_IN_TEAM = 242
SGangNormalResult.JOIN_GANG_TEAM_REP__NOT_LEADER = 243
SGangNormalResult.JOIN_GANG_TEAM_REP__NOT_IN_APPLY_LIST = 244
SGangNormalResult.JOIN_GANG_TEAM_REP__TEAM_FULL = 245
SGangNormalResult.JOIN_GANG_TEAM_REP__APPLICANT_NOT_IN_GANG = 246
SGangNormalResult.JOIN_GANG_TEAM_REP__APPLICANT_IN_TEAM = 247
SGangNormalResult.INVITE_GANG_TEAM__NO_GANG = 251
SGangNormalResult.INVITE_GANG_TEAM__NOT_IN_TEAM = 252
SGangNormalResult.INVITE_GANG_TEAM__INVITEE_NOT_IN_GANG = 254
SGangNormalResult.INVITE_GANG_TEAM__INVITEE_IN_TEAM = 255
SGangNormalResult.INVITE_GANG_TEAM__INVITEE_OFFLINE = 256
SGangNormalResult.INVITE_GANG_TEAM__SUCCEED = 257
SGangNormalResult.INVITE_GANG_TEAM__ALREADY_INVITE = 258
SGangNormalResult.INVITE_GANG_TEAM_REP__NO_GANG = 271
SGangNormalResult.INVITE_GANG_TEAM_REP__IN_TEAM = 272
SGangNormalResult.INVITE_GANG_TEAM_REP__TEAM_NOT_EXIST = 273
SGangNormalResult.INVITE_GANG_TEAM_REP__TEAM_FULL = 274
SGangNormalResult.INVITE_GANG_TEAM_REP__TIMEOUT = 275
SGangNormalResult.INVITE_GANG_TEAM_REP__INVITER_NOT_IN_GANG = 276
SGangNormalResult.INVITE_GANG_TEAM_REP__INVITER_NOT_IN_TEAM = 277
SGangNormalResult.CHANGE_GANG_TEAM_LEADER__NO_GANG = 291
SGangNormalResult.CHANGE_GANG_TEAM_LEADER__NOT_IN_TEAM = 292
SGangNormalResult.CHANGE_GANG_TEAM_LEADER__NOT_LEADER = 293
SGangNormalResult.CHANGE_GANG_TEAM_LEADER__NEW_LEADER_NOT_IN_TEAM = 294
SGangNormalResult.CHANGE_GANG_TEAM_LEADER__NEW_LEADER_SELF = 295
SGangNormalResult.LEAVE_GANG_TEAM__NO_GANG = 311
SGangNormalResult.LEAVE_GANG_TEAM__NOT_IN_TEAM = 312
SGangNormalResult.KICK_GANG_TEAM_MEMBER__NO_GANG = 321
SGangNormalResult.KICK_GANG_TEAM_MEMBER__NOT_IN_TEAM = 322
SGangNormalResult.KICK_GANG_TEAM_MEMBER__NOT_LEADER = 323
SGangNormalResult.KICK_GANG_TEAM_MEMBER__MEMBER_NOT_IN_TEAM = 324
SGangNormalResult.YUAN_BAO_TO_BANG_GONG_FUNCTION_NOT_OPEN = 331
SGangNormalResult.YUAN_BAO_EXCHANGE_CFG_NOT_EXIST = 332
SGangNormalResult.USER_ID_NOT_EXIST = 333
SGangNormalResult.CLIENT_YUAN_BAO_NOT_SAME_WITH_SERVER = 334
SGangNormalResult.NO_BANG_GONG_CAN_EXCHANGE = 335
SGangNormalResult.BANG_GONG_EXCHANGE_OUT_LIMIT = 336
function SGangNormalResult:ctor(result, args)
  self.id = 12589828
  self.result = result or nil
  self.args = args or {}
end
function SGangNormalResult:marshal(os)
  os:marshalInt32(self.result)
  os:marshalCompactUInt32(table.getn(self.args))
  for _, v in ipairs(self.args) do
    os:marshalString(v)
  end
end
function SGangNormalResult:unmarshal(os)
  self.result = os:unmarshalInt32()
  for _size_ = os:unmarshalCompactUInt32(), 1, -1 do
    local v = os:unmarshalString()
    table.insert(self.args, v)
  end
end
function SGangNormalResult:sizepolicy(size)
  return size <= 65535
end
return SGangNormalResult
